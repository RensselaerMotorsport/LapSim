#import car_simple
#from straightlineequations import calculate_drag_force
#car = Car("../data/rm25.json") #initiate the car class
#Collecting required attributes for calculations
#carmass=car.attrs['mass_car'] #Car mass
#cd=car.attrs['Cd'] #coefficent of drag
#rho=car.attrs['rho'] #Air density
#A=car.attrs['A'] #frontal wing area
mu=1.6
yaccleration=9.8 #m/s2

def normal_force(carmass,yaccleration):
    """A function for calculating the normal force on the car.
    
    Given: carmass: the mass of the car from the provided car class
    yaccleration: the accleration due to gravity and potentially downforce
    
    Returns: the normal force on the car"""
    return carmass*yaccleration

#Need to figure out how we are pulling the instanteous radius values from Justin's Excel
def cornervmax(mu, carmass, yaccleration, cd, rho, A, radius):
    """A function for finding the maxiumum velocity of the car.
    
    Given: mu, the kinematic visocity of air
    carmass, the calculated mass of the car
    yaccleration, the accleration due to gravity and potentially downforce
    cd, the coefficent of drag on the car
    rho, the density of air
    A, the frontal car area
    radius, the instaneous radius of the corner
    There might be an error somewhere in the provided equation
    
    Returns vmax, the maxiumum speed of the car at that instanteous radius"""
    normal=normal_force(carmass,yaccleration)
    drag=.5*rho*A*cd
    return ((mu*normal)**(2)/((carmass/(1/radius))**(2)+(drag)**2))**(1/4)

print(cornervmax(mu,295,yaccleration,1.41,1.162,1,.11594202))